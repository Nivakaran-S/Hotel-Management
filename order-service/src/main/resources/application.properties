spring.application.name=order-service
server.port=8081

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/order_service
spring.datasource.username=root
spring.datasource.password=mysql
spring.jpa.hibernate.ddl-auto=none

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true

# Security Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8181/realms/roompulse-realm

# Restaurant Service Configuration
restaurant.service.url=http://localhost:8086

# API Documentation
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.api-docs.path=/api-docs

# Resilience4j Circuit Breaker
resilience4j.circuitbreaker.instances.restaurant.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.restaurant.slidingWindowSize=10
resilience4j.circuitbreaker.instances.restaurant.failureRateThreshold=50
resilience4j.circuitbreaker.instances.restaurant.waitDurationInOpenState=10s
resilience4j.circuitbreaker.instances.restaurant.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.restaurant.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.restaurant.minimum-number-of-calls=5

# Resilience4j Retry
resilience4j.retry.instances.restaurant.max-attempts=3
resilience4j.retry.instances.restaurant.wait-duration=2s

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties.schema.registry.url=http://127.0.0.1:8085

# Actuator
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.observations.key-values.application=order-service
management.tracing.sampling.probability=1.0

# Loki
loki.url=http://localhost:3100/loki/api/v1/push